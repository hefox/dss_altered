<?php
// $Id: nd_cck.module,v 1.1.2.11.2.1 2009/11/11 14:28:39 swentel Exp $

/**
 * @file
 * CCK support for Node Displays.
 */

/**
 * Implementation of hook_ds_fields().
 */
function nd_cck_ds_fields($type_name, $build_mode, $extra) {
  $fields = array();
  if (!empty($type_name)) {
    $type = content_types($type_name);
    $field_types = _content_field_types();
    $fields = $type['fields'];
    foreach ($fields as $field => $value) {
      $options = array();
      $field_type = $field_types[$value['type']];
      if (isset($field_type['formatters'])) {
        foreach ($field_type['formatters'] as $formatter_name => $formatter_info) {
          $options[$formatter_name] = $formatter_info['label'];
        }
      }
      $fields[$field]['storage'] = TRUE;
      $fields[$field]['formatters'] = $options;
      $fields[$field]['title'] = $value['widget']['label'];
    }
  }
  return array('nd' => $fields);
}

/**
 * Implementation of hook_form_alter().
 */
function nd_cck_form_alter(&$form, $form_state, $form_id) {
  switch($form_id) {
    case 'ds_display_overview_form':
      $form['#submit'][] = 'nd_cck_display_overview_form_submit';
      break;
    case 'content_display_overview_form':
      $type_name = $form['#type_name'];
      $context = $form['#contexts'];
      $content_type = content_types($type_name);
      $type_url_str = $content_type['url_str'];    
      $exclude = variable_get('nd_buildmodes_exclude',array());
      if (!$exclude[$type_name]['ds_block_all'] && !$exclude[$type_name][$context]) {
        drupal_set_message("This display for this content type is being managed by display suite.", 'warning',false);
        drupal_goto('admin/ds/layout/'. $type_url_str .'/'. $context);
      }
      break;
  }
}

/**
 * Submit handler for the display overview form.
 */
function nd_cck_display_overview_form_submit($form, &$form_state) {

  $build_mode = $form['#build_mode'];

  // Fields.
  module_load_include('inc', 'content', 'includes/content.crud');
  $form_values = $form_state['values'];
  foreach ($form_values as $key => $values) {
    if (in_array($key, $form['#fields'])) {
      $field = content_fields($key, $form['#type_name']);
      // We have some numeric keys here, so we can't use array_merge
      $field['display_settings'] = $values + $field['display_settings'];
      $field['display_settings'][$build_mode]['exclude'] = ($field['display_settings'][$build_mode]['region'] == 'disabled') ? 1 : 0;
      $field['display_settings'][$build_mode]['weight'] = $form_values[$key]['ds_weight'];
      content_field_instance_update($field);
    }
  }

}

/**
 * Theme preprocess function for field.tpl.php.
 * Apply the label settings for the active context.
 */
function nd_cck_preprocess_content_field(&$variables) {

  $element = $variables['element'];

  $field = content_fields($element['#field_name'], $element['#node']->type);

  $format = isset($field['display_settings'][$element['#context']]['label']['format']) ? $field['display_settings'][$element['#context']]['label']['format'] : $field['display_settings']['label']['format'];
  $variables['label_display'] = $format;

}